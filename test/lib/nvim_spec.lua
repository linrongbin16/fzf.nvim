---@diagnostic disable: undefined-field
local cwd = vim.fn.getcwd()

describe("lib.nvim", function()
  local assert_eq = assert.is_equal
  local assert_true = assert.is_true
  local assert_false = assert.is_false

  before_each(function()
    vim.api.nvim_command("cd " .. cwd)
  end)

  local libtbl = require("fzfx.lib.tables")
  local libnvim = require("fzfx.lib.nvim")

  describe("[get_buf_option/set_buf_option]", function()
    it("get filetype", function()
      local ft = libnvim.get_buf_option(0, "filetype")
      print(string.format("filetype get buf option:%s\n", vim.inspect(ft)))
      assert_eq(type(ft), "string")
    end)
    it("set filetype", function()
      libnvim.set_buf_option(0, "filetype", "lua")
      local ft = libnvim.get_buf_option(0, "filetype")
      print(string.format("filetype set buf option:%s\n", vim.inspect(ft)))
      assert_eq(ft, "lua")
    end)
  end)
  describe("[buf_is_valid]", function()
    it("valid", function()
      assert_false(libnvim.buf_is_valid())
      assert_false(libnvim.buf_is_valid(nil))
    end)
  end)
  describe("[get_win_option/set_win_option]", function()
    it("get spell", function()
      libnvim.set_win_option(0, "spell", true)
      local s = libnvim.get_win_option(0, "spell")
      print(string.format("spell get win option:%s\n", vim.inspect(s)))
      assert_eq(type(s), "boolean")
      assert_true(s)
    end)
    it("set spell", function()
      libnvim.set_win_option(0, "spell", false)
      local s = libnvim.get_win_option(0, "spell")
      print(string.format("spell set win option:%s\n", vim.inspect(s)))
      assert_false(s)
    end)
  end)
  describe("[WindowOptsContext]", function()
    it("save", function()
      local ctx = libnvim.WindowOptsContext:save()
      assert_eq(type(ctx), "table")
      assert_false(libtbl.tbl_empty(ctx))
      assert_true(ctx.bufnr ~= nil)
    end)
    it("restore", function()
      local ctx = libnvim.WindowOptsContext:save()
      assert_eq(type(ctx), "table")
      assert_false(libtbl.tbl_empty(ctx))
      assert_true(ctx.bufnr ~= nil)
      ctx:restore()
    end)
  end)
end)
